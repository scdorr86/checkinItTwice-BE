// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace checkinItTwice_BE.Migrations
{
    [DbContext(typeof(CheckingItTwiceDbContext))]
    [Migration("20231114002844_initialSetup")]
    partial class initialSetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("checkinItTwice_BE.Models.ChristmasList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChristmasYearId")
                        .HasColumnType("integer");

                    b.Property<int>("GifteeId")
                        .HasColumnType("integer");

                    b.Property<string>("ListName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("YearId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChristmasYearId");

                    b.HasIndex("GifteeId");

                    b.HasIndex("UserId");

                    b.ToTable("ChristmasLists");
                });

            modelBuilder.Entity("checkinItTwice_BE.Models.ChristmasYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ListYear")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<decimal>("YearBudget")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ChristmasYears");
                });

            modelBuilder.Entity("checkinItTwice_BE.Models.Gift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GiftName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OrderedFrom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Gifts");
                });

            modelBuilder.Entity("checkinItTwice_BE.Models.Giftee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Giftees");
                });

            modelBuilder.Entity("checkinItTwice_BE.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChristmasListGift", b =>
                {
                    b.Property<int>("ChristmasListsId")
                        .HasColumnType("integer");

                    b.Property<int>("GiftsId")
                        .HasColumnType("integer");

                    b.HasKey("ChristmasListsId", "GiftsId");

                    b.HasIndex("GiftsId");

                    b.ToTable("ChristmasListGift");
                });

            modelBuilder.Entity("checkinItTwice_BE.Models.ChristmasList", b =>
                {
                    b.HasOne("checkinItTwice_BE.Models.ChristmasYear", "ChristmasYear")
                        .WithMany("ChristmasLists")
                        .HasForeignKey("ChristmasYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("checkinItTwice_BE.Models.Giftee", "Giftee")
                        .WithMany("ChristmasLists")
                        .HasForeignKey("GifteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("checkinItTwice_BE.Models.User", "User")
                        .WithMany("ChristmasList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChristmasYear");

                    b.Navigation("Giftee");

                    b.Navigation("User");
                });

            modelBuilder.Entity("checkinItTwice_BE.Models.ChristmasYear", b =>
                {
                    b.HasOne("checkinItTwice_BE.Models.User", "User")
                        .WithMany("ChristmasYear")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("checkinItTwice_BE.Models.Gift", b =>
                {
                    b.HasOne("checkinItTwice_BE.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("checkinItTwice_BE.Models.Giftee", b =>
                {
                    b.HasOne("checkinItTwice_BE.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChristmasListGift", b =>
                {
                    b.HasOne("checkinItTwice_BE.Models.ChristmasList", null)
                        .WithMany()
                        .HasForeignKey("ChristmasListsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("checkinItTwice_BE.Models.Gift", null)
                        .WithMany()
                        .HasForeignKey("GiftsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("checkinItTwice_BE.Models.ChristmasYear", b =>
                {
                    b.Navigation("ChristmasLists");
                });

            modelBuilder.Entity("checkinItTwice_BE.Models.Giftee", b =>
                {
                    b.Navigation("ChristmasLists");
                });

            modelBuilder.Entity("checkinItTwice_BE.Models.User", b =>
                {
                    b.Navigation("ChristmasList");

                    b.Navigation("ChristmasYear");
                });
#pragma warning restore 612, 618
        }
    }
}
